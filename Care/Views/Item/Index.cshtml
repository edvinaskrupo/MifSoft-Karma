@model UserAndItemModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Upload">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Users.ElementAt<UserModel>(0).UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.ElementAt<UserModel>(0).EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.ElementAt<ItemModel>(0).Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.ElementAt<ItemModel>(0).ImageName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                <!-- No matching user results in a crash -->
                @try
                {
                     @Html.DisplayFor(modelItem => modelItem.Users.First(c => c.UserId == item.UserId).EmailAddress);
                } catch (Exception e)
                {
                     <b>NULL</b>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ImageId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ImageId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ImageId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
