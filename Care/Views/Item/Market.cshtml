@model List<UserAndItemModel>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Market";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<h1>Item Market</h1>

<p>
    @{
        var userWithMostItems = (from item in Model
                                orderby item.UserId
                                group item by item.UserId into itemGroup
                                select new {
                                    UserId = itemGroup.Key,
                                    EmailAddress = itemGroup.Where(item => item.UserId == itemGroup.Key).ElementAt(0).EmailAddress,
                                    Count = itemGroup.Count()
                                }).Aggregate(
                                    new {
                                        UserId = 0, 
                                        EmailAddress = "",
                                        Count = 0
                                    }, 
                                    (current, next) => next.Count > current.Count ? next : current
                                );
    }

    @(userWithMostItems.Count == 0 ?
        "Sorry, no items were found" :
        "User " + userWithMostItems.EmailAddress + " has uploaded the most (" + userWithMostItems.Count + ") items.")
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ElementAt<UserAndItemModel>(0).ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ElementAt<UserAndItemModel>(0).ItemCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ElementAt<UserAndItemModel>(0).ItemCondition)
            </th>
            <th>
                Owner's Email Address
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemCategory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemCondition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
        </tr>
        }
    </tbody>
</table>
